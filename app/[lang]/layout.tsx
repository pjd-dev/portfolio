import type { Metadata, Viewport } from "next";
import "../globals.css";
import Logo from "@/public/logotype/DB_Master.svg";
import LanguageToggle from "@/components/LanguageToggle";
// import EngineClient from "@/hooks/engine-client";
import ThemeToggle from "@/components/ThemeToggle";
import { getCssText } from "@/stitches.config";
import { getDictionary } from "@/lib/getDictionary";
import { spaceGrotesk } from "../fonts";

export const dynamic = "force-dynamic";
export const metadata: Metadata = {
  title: "Darrybook - ",
  description: "Generated by create next app",
};

export const viewport: Viewport = {
  initialScale: 1.0,
  userScalable: true,
  viewportFit: "cover",
};

export async function generateStaticParams() {
  return [{ lang: "en" }, { lang: "fr" }];
}
const FooterButtonStyle =
  "text-[0.5rem] md:text-xs  p-[0.8rem] md:p-4 hover:underline ";
export default async function RootLayout({
  children,
  params,
}: {
  children: React.ReactNode;
  params: Promise<{ lang: string }>;
}) {
  const { lang } = await params;
  const dictionary = await getDictionary(lang);
  return (
    <html
      lang={lang}
      data-google-analytics-opt-out=""
      className={spaceGrotesk.className}
      suppressHydrationWarning
    >
      <head>
        <script
          dangerouslySetInnerHTML={{
            __html: `
      (function() {
        try {
          var stored = localStorage.getItem('theme');
          var theme = stored === 'light' || stored === 'dark'
            ? stored
            : (window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light');
          document.documentElement.setAttribute('data-theme', theme);
        } catch(e) {
          document.documentElement.setAttribute('data-theme', 'light');
        }
      })();
                `,
          }}
        />

        <style
          id="stitches"
          dangerouslySetInnerHTML={{ __html: getCssText() }}
        />
      </head>

      <body>
        <header
          className="absolute z-50 flex flex-col items-end top-[1rem] right-4 md:top-8 md:right-8 lg:right-[3rem] lg:top-[3rem] gap-2"
          aria-hidden="false"
          role="banner"
        >
          <div className=" glass rounded-full py-[0.2rem] px-[0.6rem]  ">
            <Logo
              className="w-6 h-6 md:w-12 md:h-12 lg:h-12 lg:w-12 block "
              aria-hidden="true"
            />
          </div>

          <LanguageToggle locale={lang as "en" | "fr"} />
          <ThemeToggle locale={lang as "en" | "fr"} />
        </header>
        {children}
        <footer
          className=" h-[var(--footer-height)] flex w-full  items-center justify-between px-4 md:px-8  lg:px-12  inset-0 "
          aria-hidden="false"
          role="contentinfo"
        >
          <div className="flex gap-1 -ml-4">
            {dictionary.layout.footer.links.privacyPolicy && (
              <a
                href={dictionary.layout.footer.links.privacyPolicy.href}
                rel={dictionary.layout.footer.links.privacyPolicy.rel}
                target={dictionary.layout.footer.links.privacyPolicy.target}
                className={FooterButtonStyle}
              >
                {dictionary.layout.footer.links.privacyPolicy.label}
              </a>
            )}

            {dictionary.layout.footer.links.termsOfService && (
              <a
                href={dictionary.layout.footer.links.termsOfService.href}
                rel={dictionary.layout.footer.links.termsOfService.rel}
                target={dictionary.layout.footer.links.termsOfService.target}
                className={FooterButtonStyle}
              >
                {dictionary.layout.footer.links.termsOfService.label}
              </a>
            )}
          </div>
          <div className="flex items-center justify-between text-[0.5rem] sm:text-xs md:text-sm">
            {dictionary.layout.footer.copyright}
          </div>
        </footer>
      </body>
    </html>
  );
}
